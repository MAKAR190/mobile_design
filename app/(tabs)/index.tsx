import { Colors } from "@/constants/Colors";
import {
  StyleSheet,
  View,
  Text,
  FlatList,
  Image,
  ScrollView,
  Pressable,
} from "react-native";
import { Svg, Path, G } from "react-native-svg";
import { useState } from "react";
const list = [
  {
    key: "Sweet",
    icon: (
      <Svg width="47" height="50" viewBox="0 0 47 50" fill="none">
        <G filter="url(#filter0_d_23_92)">
          <Path
            d="M11.3943 36C11.0457 36 10.756 35.8783 10.5252 35.6349C10.2944 35.3916 10.179 35.0962 10.179 34.7487V26.6935C10.179 25.9712 10.4329 25.3562 10.9407 24.8484C11.4485 24.3406 12.0635 24.0867 12.7858 24.0867H13.5418V16.996C13.5418 16.2737 13.7957 15.6587 14.3035 15.1509C14.8113 14.6431 15.4263 14.3892 16.1486 14.3892H22.7049V11.898C22.2324 11.5917 21.8362 11.2423 21.5163 10.8499C21.1964 10.4575 21.0365 9.99138 21.0365 9.45164C21.0365 9.13902 21.0987 8.83053 21.2231 8.52618C21.3474 8.2218 21.5286 7.94891 21.7664 7.7075L23.5 6L25.231 7.71246C25.4706 7.94703 25.6525 8.21687 25.7769 8.52198C25.9013 8.82713 25.9635 9.13639 25.9635 9.44978C25.9635 9.99076 25.8035 10.4575 25.4836 10.8499C25.1638 11.2423 24.7676 11.5917 24.2951 11.898V14.3892H30.8513C31.5736 14.3892 32.1887 14.6431 32.6965 15.1509C33.2043 15.6587 33.4582 16.2737 33.4582 16.996V24.0867H34.2141C34.9365 24.0867 35.5515 24.3406 36.0593 24.8484C36.5671 25.3562 36.821 25.9712 36.821 26.6935V34.7487C36.821 35.0962 36.6953 35.3916 36.4438 35.6349C36.1924 35.8783 35.8924 36 35.5438 36H11.3943ZM15.1059 24.0867H31.8941V16.996C31.8941 16.6919 31.7963 16.4421 31.6008 16.2466C31.4053 16.0511 31.1555 15.9533 30.8513 15.9533H16.1486C15.8445 15.9533 15.5947 16.0511 15.3992 16.2466C15.2037 16.4421 15.1059 16.6919 15.1059 16.996V24.0867ZM11.7431 34.4359H35.2569V26.6935C35.2569 26.3894 35.1591 26.1396 34.9636 25.9441C34.7681 25.7485 34.5183 25.6508 34.2141 25.6508H12.7858C12.4817 25.6508 12.2319 25.7485 12.0364 25.9441C11.8409 26.1396 11.7431 26.3894 11.7431 26.6935V34.4359Z"
            fill="#8D1EE4"
          />
        </G>
      </Svg>
    ),
  },
  {
    key: "Fruits",
    icon: (
      <Svg width="43" height="50" viewBox="0 0 43 50" fill="none">
        <G filter="url(#filter0_d_23_159)">
          <Path
            d="M21.4916 36C18.3996 36 15.7732 34.9195 13.6126 32.7586C11.4519 30.5977 10.3716 27.9717 10.3716 24.8806C10.3716 22.2768 11.17 19.9638 12.7669 17.9415C14.3637 15.9192 16.4431 14.6221 19.0051 14.0501C17.9497 13.8731 17.0334 13.4351 16.2562 12.7363C15.479 12.0374 14.9438 11.2196 14.6506 10.2826C14.1253 9.72741 13.7858 9.07108 13.632 8.31363C13.4783 7.55616 13.4002 6.78495 13.3978 6C14.1229 6.01434 14.8452 6.09282 15.5645 6.23544C16.2838 6.37802 16.9293 6.68125 17.501 7.14513C18.7179 7.58666 19.6892 8.35967 20.415 9.46413C21.1407 10.5686 21.5365 11.8095 21.6023 13.1868C21.9637 12.2127 22.429 11.295 22.9982 10.4336C23.5673 9.57213 24.2281 8.76617 24.9803 8.01566C25.1395 7.85653 25.3348 7.77307 25.5664 7.76529C25.7979 7.75751 25.995 7.83529 26.1578 7.99863C26.3325 8.14999 26.4216 8.35101 26.4252 8.60171C26.4288 8.85238 26.3466 9.06168 26.1787 9.22962C25.5078 9.90052 24.9192 10.6255 24.4127 11.4047C23.9063 12.1838 23.4924 13.0124 23.1711 13.8904C25.9089 14.2877 28.1696 15.5281 29.9531 17.6117C31.7366 19.6953 32.6284 22.1205 32.6284 24.8874C32.6284 27.9766 31.5453 30.601 29.379 32.7606C27.2128 34.9202 24.5837 36 21.4916 36ZM21.4929 34.2769C24.0931 34.2769 26.3118 33.3606 28.1492 31.528C29.9866 29.6953 30.9053 27.4789 30.9053 24.8787C30.9053 22.2786 29.9877 20.0598 28.1526 18.2224C26.3175 16.385 24.0981 15.4663 21.4944 15.4663C18.8908 15.4663 16.6732 16.3839 14.8418 18.219C13.0104 20.0541 12.0947 22.2735 12.0947 24.8772C12.0947 27.4809 13.011 29.6984 14.8437 31.5298C16.6763 33.3612 18.8927 34.2769 21.4929 34.2769Z"
            fill="#8D1EE4"
          />
        </G>
      </Svg>
    ),
  },
  {
    key: "Drinks",
    icon: (
      <Svg width="49" height="50" viewBox="0 0 49 50" fill="none">
        <G filter="url(#filter0_d_23_99)">
          <Path
            d="M10.3454 36V34.4348H13.109V28.5245C12.2242 28.3299 11.5432 27.9232 11.066 27.3045C10.5889 26.6857 10.3503 25.9554 10.3503 25.1136V13.6043H17.4541V25.1136C17.4541 25.9051 17.2059 26.6231 16.7095 27.2675C16.213 27.9119 15.5346 28.3314 14.6742 28.5259V34.4348H17.459V36H10.3454ZM11.9155 21.0114H15.8889V15.1695H11.9155V21.0114ZM13.8998 27.1027C14.4345 27.1027 14.8998 26.9103 15.2954 26.5255C15.6911 26.1408 15.8889 25.6701 15.8889 25.1136V22.5766H11.9155V25.1136C11.9155 25.6701 12.1086 26.1408 12.4947 26.5255C12.8809 26.9103 13.3492 27.1027 13.8998 27.1027ZM25.2198 36C24.7894 36 24.4209 35.8467 24.1144 35.5402C23.8079 35.2337 23.6546 34.8652 23.6546 34.4348V18.1435C23.6546 17.8124 23.7644 17.5163 23.984 17.2552C24.2035 16.9941 24.4611 16.8033 24.7568 16.6826L26.3372 16.0565C27.0977 15.7706 27.6899 15.4057 28.1139 14.9617C28.5378 14.5177 28.7497 13.7761 28.7497 12.737V7.25033C28.7497 6.89162 28.872 6.59355 29.1166 6.35613C29.3612 6.11871 29.6635 6 30.0236 6H32.3001C32.6506 6 32.9508 6.11925 33.2009 6.35774C33.4509 6.59626 33.5759 6.89181 33.5759 7.2444V12.737C33.5759 13.7761 33.7941 14.5177 34.2305 14.9617C34.6669 15.4057 35.2653 15.7706 36.0259 16.0565L37.6177 16.6826C37.9133 16.805 38.1601 16.9964 38.3579 17.257C38.5557 17.5175 38.6546 17.813 38.6546 18.1435V34.4348C38.6546 34.8652 38.5014 35.2337 38.1949 35.5402C37.8883 35.8467 37.5199 36 37.0894 36H25.2198ZM30.3149 9.4239H32.0106V7.56522H30.3149V9.4239ZM25.2198 22.0679H37.0894V18.1435L35.4565 17.5174C34.3897 17.1217 33.5487 16.576 32.9335 15.8801C32.3182 15.1842 32.0106 14.143 32.0106 12.7565V10.9891H30.3149V12.7565C30.3149 14.143 30.0003 15.1842 29.3709 15.8801C28.7416 16.576 27.8979 17.1217 26.8397 17.5174L25.2198 18.1435V22.0679ZM25.2198 34.4348H37.0894V29.8223H25.2198V34.4348ZM25.2198 28.2571H37.0894V23.6331H25.2198V28.2571Z"
            fill="#8D1EE4"
          />
        </G>
      </Svg>
    ),
  },
  {
    key: "Cleaning",
    icon: (
      <Svg width="11" height="28" viewBox="0 0 11 28" fill="none">
        <Path
          d="M2.07051 6.8333L3.92947 3.32796V2.07688H1.59618V0.128174H9.47447C9.79705 0.128174 10.086 0.255841 10.3413 0.511175C10.5967 0.766536 10.7244 1.05711 10.7244 1.38288V2.48713L9.27568 5.38459H6.22439V3.6538L3.17309 6.8333H2.07051ZM0.275635 27.8718V18.4215C0.275635 18.2751 0.308218 18.0793 0.373385 17.8341C0.43858 17.5889 0.506955 17.3894 0.57851 17.2355L6.22439 6.61534H9.27997C9.49933 6.83756 9.66883 7.08556 9.78847 7.35934C9.90813 7.63312 9.96797 7.93 9.96797 8.24997V27.8718H0.275635ZM1.81414 26.3333H8.42951V8.15384H7.15384L1.81414 18.2168V26.3333Z"
          fill="#8D1EE4"
        />
      </Svg>
    ),
  },
  {
    key: "Bakery",
    icon: (
      <Svg width="35" height="22" viewBox="0 0 35 22" fill="none">
        <Path
          d="M30.4423 19.9615C31.3836 20.453 32.16 20.3282 32.7716 19.5873C33.3833 18.8464 33.4594 18.0459 33 17.1859L29.7885 11.1859L26.9615 18.1346L30.4423 19.9615ZM21.6474 18.4423H25.1731L29.2115 8.49999C29.4722 7.85791 29.5256 7.33522 29.3718 6.93191C29.2179 6.52858 28.898 6.23023 28.4118 6.03687L25.0833 4.69874C24.5598 4.4701 24.0505 4.44019 23.5553 4.60899C23.0601 4.7778 22.7917 5.14531 22.75 5.71154L21.6474 18.4423ZM9.76284 18.4423H13.2885L12.1603 5.5577C12.1186 5.12395 11.8625 4.81519 11.3918 4.63141C10.9212 4.44766 10.4081 4.4701 9.85259 4.69874L6.57051 6.03208C6.05662 6.2436 5.7556 6.58467 5.66747 7.05529C5.57933 7.5259 5.64104 8.0502 5.85259 8.6282L9.76284 18.4423ZM4.49359 19.9615L7.97434 18.1346L5.21155 11.1859L1.93592 17.3397C1.44445 18.2489 1.53285 19.028 2.20113 19.6771C2.86941 20.3261 3.63356 20.4209 4.49359 19.9615ZM14.8269 18.4423H20.109L21.3974 3.66666C21.4391 3.14316 21.3055 2.70566 20.9968 2.35416C20.688 2.00266 20.2559 1.82691 19.7003 1.82691H15.2516C14.8061 1.82691 14.3969 1.98931 14.024 2.31412C13.6512 2.6389 13.4893 3.04701 13.5385 3.53845L14.8269 18.4423ZM3.49117 21.7115C2.55581 21.7115 1.77109 21.3902 1.13701 20.7476C0.502924 20.105 0.185883 19.3301 0.185883 18.4231C0.185883 18.1149 0.223813 17.8151 0.299674 17.5237C0.375535 17.2323 0.48291 16.9444 0.621799 16.6602L4.45517 9.32691C4.08765 8.38247 4.03342 7.4423 4.29251 6.50641C4.55159 5.57052 5.11649 4.93163 5.98722 4.58974L9.29492 3.28204C9.76929 3.07906 10.2543 2.97651 10.75 2.97437C11.2458 2.97223 11.6881 3.1282 12.077 3.44228C12.1357 2.57264 12.468 1.8296 13.0738 1.21316C13.6795 0.596688 14.415 0.288452 15.2803 0.288452H19.7051C20.5555 0.288452 21.2898 0.576381 21.9078 1.15224C22.5259 1.7281 22.8857 2.44017 22.9872 3.28845C23.312 2.9594 23.7222 2.83066 24.218 2.90224C24.7137 2.97383 25.188 3.10042 25.641 3.28204L28.9231 4.58974C29.8034 4.94552 30.394 5.58174 30.6947 6.49841C30.9955 7.41508 30.9455 8.33013 30.5449 9.24358L34.3782 16.5769C34.4882 16.8077 34.5884 17.0404 34.6787 17.2751C34.769 17.5098 34.8141 17.7557 34.8141 18.0128C34.8141 19.0289 34.4623 19.8993 33.7588 20.6242C33.0553 21.3491 32.2003 21.7115 31.1938 21.7115C30.9428 21.7115 30.708 21.6795 30.4893 21.6154C30.2707 21.5513 30.0563 21.4658 29.8462 21.359L27.1603 19.9808H7.75642L5.25642 21.2949C4.98398 21.4466 4.69952 21.554 4.40305 21.617C4.10658 21.68 3.80262 21.7115 3.49117 21.7115Z"
          fill="#8D1EE4"
        />
      </Svg>
    ),
  },
  {
    key: "Flowers",
    icon: (
      <Svg width="25" height="31" viewBox="0 0 25 31" fill="none">
        <Path
          d="M12.5013 11.5826C13.0752 11.5826 13.567 11.3799 13.9768 10.9747C14.3865 10.5695 14.5913 10.0799 14.5913 9.50597C14.5913 8.93203 14.3877 8.4402 13.9803 8.03047C13.5729 7.62075 13.0806 7.41589 12.5035 7.41589C11.9264 7.41589 11.4356 7.61957 11.0313 8.02693C10.6269 8.43432 10.4247 8.92659 10.4247 9.50372C10.4247 10.0808 10.6273 10.5716 11.0325 10.976C11.4377 11.3804 11.9273 11.5826 12.5013 11.5826ZM12.5088 18.7621C11.6579 18.7621 10.8866 18.5062 10.1949 17.9944C9.50321 17.4827 9.02853 16.7834 8.77084 15.8966C8.62125 15.9714 8.45913 16.0131 8.28446 16.0216C8.10977 16.0302 7.94321 16.0345 7.78479 16.0345C6.72979 16.0345 5.82696 15.6668 5.07629 14.9315C4.32563 14.1962 3.95029 13.2983 3.95029 12.2378C3.95029 11.7454 4.05077 11.2709 4.25171 10.8141C4.45263 10.3574 4.72128 9.92342 5.05767 9.51206C4.73931 9.10073 4.4821 8.66508 4.28604 8.20514C4.08999 7.7452 3.99196 7.27134 3.99196 6.78356C3.99196 5.71672 4.36114 4.81342 5.0995 4.07364C5.83784 3.33383 6.73295 2.96393 7.78484 2.96393C7.94322 2.96393 8.10977 2.97088 8.28446 2.98476C8.45913 2.99865 8.63106 3.02697 8.80025 3.06972C9.04534 2.20433 9.50902 1.51576 10.1913 1.00401C10.8736 0.492263 11.6427 0.236389 12.4987 0.236389C13.3546 0.236389 14.1225 0.492263 14.8023 1.00401C15.4822 1.51576 15.9518 2.20433 16.2112 3.06972C16.3728 3.02697 16.5409 2.99865 16.7155 2.98476C16.8902 2.97088 17.057 2.96393 17.2158 2.96393C18.272 2.96393 19.1707 3.33383 19.912 4.07364C20.6534 4.81342 21.024 5.71672 21.024 6.78356C21.024 7.27881 20.9279 7.75827 20.7355 8.22193C20.5432 8.68557 20.2788 9.11239 19.9423 9.50239C20.2607 9.91372 20.5206 10.3494 20.722 10.8093C20.9234 11.2693 21.024 11.7431 21.024 12.231C21.024 13.2979 20.6534 14.1986 19.912 14.9329C19.1707 15.6673 18.272 16.0345 17.2158 16.0345C17.057 16.0345 16.8902 16.0302 16.7155 16.0216C16.5409 16.0131 16.3636 15.9714 16.1838 15.8966C15.9455 16.7834 15.4862 17.4827 14.8058 17.9944C14.1254 18.5062 13.3598 18.7621 12.5088 18.7621ZM12.5 30.7636C12.5 29.2337 12.8488 27.7372 13.5465 26.274C14.2441 24.8108 15.17 23.5041 16.3241 22.3541C17.4782 21.204 18.7849 20.2796 20.2443 19.5809C21.7038 18.8822 23.1992 18.5328 24.7308 18.5328C24.7308 20.0644 24.3814 21.5599 23.6828 23.0193C22.9841 24.4787 22.0597 25.7855 20.9096 26.9396C19.7595 28.0937 18.4529 29.0195 16.9897 29.7172C15.5265 30.4148 14.0299 30.7636 12.5 30.7636ZM14.2244 29.0393C16.4573 28.4559 18.3333 27.4047 19.8526 25.8854C21.3718 24.3662 22.4231 22.4901 23.0064 20.2572C20.7874 20.8406 18.9148 21.8918 17.3886 23.4111C15.8625 24.9303 14.8077 26.8064 14.2244 29.0393ZM12.5 30.7636C12.5 29.2337 12.1512 27.7372 11.4535 26.274C10.7559 24.8108 9.83003 23.5041 8.67592 22.3541C7.52184 21.204 6.21509 20.2796 4.75567 19.5809C3.29625 18.8822 1.80077 18.5328 0.269211 18.5328C0.269211 20.0644 0.618558 21.5599 1.31725 23.0193C2.01595 24.4787 2.94034 25.7855 4.09042 26.9396C5.24048 28.0937 6.54711 29.0195 8.01034 29.7172C9.47353 30.4148 10.9701 30.7636 12.5 30.7636ZM10.7756 29.0393C8.54274 28.4559 6.66667 27.4047 5.14742 25.8854C3.6282 24.3662 2.57692 22.4901 1.99359 20.2572C4.2265 20.8406 6.10257 21.8918 7.62179 23.4111C9.14102 24.9303 10.1923 26.8064 10.7756 29.0393ZM17.2172 14.496C17.8429 14.496 18.379 14.275 18.8255 13.833C19.272 13.3909 19.4952 12.8588 19.4952 12.2367C19.4952 11.7686 19.3582 11.3443 19.0841 10.964C18.8101 10.5836 18.4495 10.3456 18.0023 10.2499L16.1128 9.81651C16.0761 10.0845 16.0166 10.3425 15.9343 10.5905C15.852 10.8384 15.7452 11.0764 15.6138 11.3045C15.4717 11.5433 15.3177 11.757 15.1518 11.9456C14.9859 12.1343 14.7922 12.3108 14.5705 12.4752L15.8197 13.8428C16.0019 14.0496 16.2116 14.2102 16.4489 14.3245C16.6861 14.4388 16.9422 14.496 17.2172 14.496ZM16.1154 9.18189L18.0023 8.76451C18.4495 8.66885 18.8085 8.42957 19.0793 8.04668C19.3502 7.66379 19.4856 7.24231 19.4856 6.78222C19.4856 6.15794 19.2673 5.6219 18.8308 5.1741C18.3944 4.72632 17.8571 4.50243 17.2192 4.50243C16.9325 4.50243 16.6748 4.56399 16.4459 4.6871C16.217 4.81024 16.007 4.97357 15.8157 5.1771L14.5609 6.53926C14.7844 6.7001 14.9818 6.87546 15.1532 7.06535C15.3246 7.25527 15.4782 7.45971 15.6138 7.67868C15.7452 7.91051 15.852 8.15388 15.9343 8.40877C16.0166 8.66363 16.0769 8.92134 16.1154 9.18189ZM10.9648 6.20435C11.2194 6.10604 11.474 6.02697 11.7286 5.96714C11.9833 5.90731 12.2422 5.87739 12.5053 5.87739C12.7685 5.87739 13.0274 5.90731 13.282 5.96714C13.5367 6.02697 13.7878 6.10604 14.0353 6.20435L14.7452 3.98777C14.9183 3.40565 14.7655 2.89131 14.2869 2.44472C13.8082 1.99814 13.2126 1.77485 12.5 1.77485C11.7874 1.77485 11.1918 1.99814 10.7131 2.44472C10.2345 2.89131 10.0871 3.40565 10.2708 3.98777L10.9648 6.20435ZM12.5 17.2236C13.2126 17.2236 13.8109 17.0019 14.2949 16.5584C14.7789 16.115 14.929 15.6044 14.7452 15.0267L14.0406 12.7941C13.7895 12.9191 13.5367 13.0048 13.282 13.0513C13.0274 13.0978 12.7685 13.121 12.5053 13.121C12.2422 13.121 11.9815 13.0964 11.7233 13.0473C11.4651 12.9982 11.2123 12.9138 10.9648 12.7941L10.2708 15.0267C10.0764 15.6088 10.2212 16.1205 10.7051 16.5617C11.1891 17.0029 11.7874 17.2236 12.5 17.2236ZM8.88463 9.18189C8.92307 8.92134 8.98343 8.66363 9.06571 8.40877C9.14796 8.15388 9.26014 7.91051 9.40225 7.67868C9.53364 7.45754 9.68229 7.25239 9.84821 7.06322C10.0141 6.87408 10.2079 6.69943 10.4295 6.53926L9.19638 5.17168C9.00646 4.96482 8.79306 4.80156 8.55617 4.68189C8.31928 4.56225 8.06361 4.50243 7.78917 4.50243C7.16456 4.50243 6.63035 4.72502 6.18654 5.17018C5.74274 5.61532 5.52084 6.14957 5.52084 6.77293C5.52084 7.23971 5.65518 7.66442 5.92388 8.04706C6.19257 8.4297 6.5505 8.66885 6.99767 8.76451L8.88463 9.18189ZM7.78204 14.4864C8.06838 14.4864 8.3312 14.4274 8.5705 14.3093C8.80984 14.1913 9.01978 14.0307 9.20034 13.8277L10.4599 12.4752C10.2206 12.3096 10.0174 12.1336 9.85017 11.9471C9.68295 11.7607 9.53364 11.5516 9.40225 11.3197C9.26014 11.0986 9.14796 10.8599 9.06571 10.6036C8.98343 10.3473 8.92392 10.085 8.88717 9.81651L6.99667 10.2574C6.53831 10.3475 6.174 10.5841 5.90375 10.9673C5.6335 11.3505 5.49838 11.7747 5.49838 12.2398C5.50479 12.8775 5.7262 13.4113 6.16259 13.8413C6.599 14.2714 7.13882 14.4864 7.78204 14.4864Z"
          fill="#8D1EE4"
        />
      </Svg>
    ),
  },
];

const products = [
  { id: "1", src: require("../../assets/images/fruits.png") },
  { id: "2", src: require("../../assets/images/strawberries.png") },
  { id: "3", src: require("../../assets/images/fruits.png") },
  { id: "4", src: require("../../assets/images/strawberries.png") },
];

interface Item {
  key: string;
  icon: React.ReactElement;
}
interface Product {
  id: string;
  src: any;
}
const IconList = () => {
  const renderItem = ({ item }: { item: Item }) => (
    <View style={styles.iconColumn}>
      <View style={styles.iconContainer}>{item.icon}</View>
      <Text style={styles.iconTitle}>{item.key}</Text>
    </View>
  );

  return (
    <FlatList
      data={list}
      renderItem={renderItem}
      keyExtractor={(item) => item.key}
      numColumns={3}
      columnWrapperStyle={styles.columnWrapper}
      scrollEnabled={false}
    />
  );
};

const HorizontalSlider = () => {
  const renderItem = ({ item }: { item: Product }) => (
    <View style={styles.itemContainer}>
      <View style={styles.imageContainer}>
        <Image source={item.src} alt={item.id} style={styles.productImage} />
      </View>
    </View>
  );

  return (
    <FlatList
      data={products}
      renderItem={renderItem}
      keyExtractor={(item) => item.id}
      horizontal={true}
      showsHorizontalScrollIndicator={false}
      contentContainerStyle={styles.listContainer}
    />
  );
};

export default function HomeScreen() {
  const [isPressed, setIsPressed] = useState(false);
  return (
    <ScrollView style={styles.container}>
      <View style={styles.intro}>
        <Text style={styles.introTitle}>Hi, Alona!</Text>
        <View style={styles.boxes}>
          <View style={styles.box}>
            <View style={styles.boxLine}>
              <Text style={styles.boxIntroTitle}>Points</Text>
              <Svg width="10" height="18" viewBox="0 0 10 18" fill="none">
                <Path
                  d="M0.982516 0L10 9L0.982516 18L0 17.0288L8.04443 9L0 0.980587L0.982516 0Z"
                  fill="#8D1EE4"
                />
              </Svg>
            </View>
            <Text style={styles.boxTitle}>2 903</Text>
          </View>
          <View style={styles.box}>
            <View style={styles.boxLine}>
              <Text style={styles.boxIntroTitle}>Bonus</Text>
              <Svg width="10" height="18" viewBox="0 0 10 18" fill="none">
                <Path
                  d="M0.982516 0L10 9L0.982516 18L0 17.0288L8.04443 9L0 0.980587L0.982516 0Z"
                  fill="#8D1EE4"
                />
              </Svg>
            </View>
            <Text style={styles.boxTitle}>$39</Text>
          </View>
        </View>
      </View>
      <View style={styles.catalog}>
        <Text style={styles.catalogTitle}>Catalog</Text>
        <IconList />
        <View style={styles.line}>
          <Text style={styles.offerTitle}>Special Offers</Text>
          <Pressable
            onPressIn={() => setIsPressed(true)}
            onPressOut={() => setIsPressed(false)}
            style={styles.ctaLine}
          >
            <Text
              style={{
                fontFamily: "SFPro",
                fontSize: 16,
                fontWeight: "400",
                color: isPressed ? Colors.purple : Colors.black,
                paddingHorizontal: 20,
                paddingBottom: 2,
              }}
            >
              view more
            </Text>
            <Svg
              style={{ marginRight: 4 }}
              width="10"
              height="18"
              viewBox="0 0 10 18"
              fill="none"
            >
              <Path
                d="M0.982516 0L10 9L0.982516 18L0 17.0288L8.04443 9L0 0.980587L0.982516 0Z"
                fill={isPressed ? Colors.purple : Colors.black}
              />
            </Svg>
          </Pressable>
        </View>
        <HorizontalSlider />
      </View>
    </ScrollView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: Colors.purple,
  },
  intro: {
    padding: 16,
    marginTop: 58,
    gap: 24,
  },
  introTitle: {
    fontFamily: "SFPro",
    fontWeight: "700",
    fontSize: 24,
    letterSpacing: -0.4,
    color: Colors.white,
  },
  boxes: {
    display: "flex",
    flexDirection: "row",
    width: "100%",
    justifyContent: "space-between",
    alignItems: "center",
    marginBottom: 24,
  },
  box: {
    backgroundColor: Colors.white,
    padding: 8,
    borderRadius: 16,
    shadowColor: "#000",
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.1,
    shadowRadius: 8,
    elevation: 5,
    width: "45%",
  },
  boxLine: {
    display: "flex",
    flexDirection: "row",
    justifyContent: "space-between",
    alignItems: "center",
    minWidth: 126,
    padding: 10,
  },
  boxTitle: {
    padding: 10,
    fontFamily: "SFPro",
    fontWeight: "700",
    fontSize: 30,
    lineHeight: 35.8,
    letterSpacing: -0.4,
    color: Colors.black,
  },
  boxIntroTitle: {
    fontFamily: "SFPro",
    fontWeight: "400",
    fontSize: 20,
    lineHeight: 23.87,
    letterSpacing: -0.4,
    color: Colors.grey,
  },
  catalog: {
    backgroundColor: Colors.white,
    flex: 1,
    borderTopLeftRadius: 14,
    borderTopRightRadius: 14,
    shadowColor: "#000000",
    shadowOffset: {
      width: 2,
      height: -4,
    },
    shadowOpacity: 0.25,
    shadowRadius: 20,
    elevation: 5,
    padding: 20,
  },
  catalogTitle: {
    fontFamily: "SFPro",
    fontSize: 20,
    fontWeight: "700",
    lineHeight: 23.87,
    letterSpacing: -0.4,
    color: Colors.black,
    marginBottom: 20,
  },
  iconContainer: {
    flex: 1,
    alignItems: "center",
    justifyContent: "center",
    margin: 5,
    backgroundColor: Colors.lavander,
    borderRadius: 100,
    padding: 10,
    width: 80,
    height: 80,
  },
  columnWrapper: {
    justifyContent: "space-around",
    padding: 0,
  },
  iconColumn: {
    display: "flex",
    justifyContent: "center",
    alignItems: "center",
    margin: 10,
  },
  iconTitle: {
    fontFamily: "SFPro",
    fontSize: 16,
    fontWeight: "400",
    color: Colors.black,
  },
  ctaLine: {
    display: "flex",
    flexDirection: "row",
    justifyContent: "space-between",
    alignItems: "center",
  },
  offerTitle: {
    fontFamily: "SFPro",
    fontSize: 20,
    fontWeight: "700",
    letterSpacing: -0.4,
    color: Colors.black,
  },
  line: {
    display: "flex",
    flexDirection: "row",
    justifyContent: "space-between",
    alignItems: "center",
    marginVertical: 20,
  },
  listContainer: {
    paddingVertical: 15,
    paddingHorizontal: 10,
  },
  itemContainer: {
    backgroundColor: Colors.lavander,
    padding: 12,
    borderRadius: 10,
    shadowColor: "#000000",
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.1,
    shadowRadius: 10,
    elevation: 10,
    marginRight: 16,
  },
  imageContainer: {
    padding: 12,
    backgroundColor: Colors.white,
    borderRadius: 14,
  },
  productImage: {
    width: 140,
    height: 140,
    borderRadius: 14,
  },
});
